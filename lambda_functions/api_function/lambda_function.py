import boto3
import os
from dotenv import load_dotenv
from apify_client import ApifyClient


load_dotenv()

APIFY_KEY = os.getenv("APIFY_API_KEY")
client = ApifyClient(APIFY_KEY)


# Function that accepts a youtube link
def run_actor(url: str):
    items = []
    run_input = {
        "downloadSubtitles": False,
        "hasCC": False,
        "hasLocation": False,
        "hasSubtitles": False,
        "is360": False,
        "is3D": False,
        "is4K": False,
        "isBought": False,
        "isHD": False,
        "isHDR": False,
        "isLive": False,
        "isVR180": False,
        "maxResultStreams": 0,
        "maxResults": 5,
        "maxResultsShorts": 0,
        "preferAutoGeneratedSubtitles": False,
        "saveSubsToKVS": False,
        "startUrls": [{"url": url}],
        "subtitlesLanguage": "en",
        "subtitlesFormat": "srt",
    }
    run = client.actor("h7sDV53CddomktSi5").call(run_input=run_input)
    for item in client.dataset(run["defaultDatasetId"]).iterate_items():
        items.append(item["title"])
    return items

def lambda_handler(event, context):
    result = None

    if event["apiPath"] == "/getVideos":
        url = event["requestBody"]["content"]["application/json"]["properties"][0][
            "value"
        ]
        result = run_actor(url)

    if result:
        print("Titles:", result)

    else:
        result = "Query Failed."

    response_body = {"application/json": {"body": str(result)}}

    action_response = {
        "actionGroup": event["actionGroup"],
        "apiPath": event["apiPath"],
        "httpMethod": event["httpMethod"],
        "httpStatusCode": 200,
        "responseBody": response_body,
    }

    session_attributes = event["sessionAttributes"]
    prompt_session_attributes = event["promptSessionAttributes"]

    api_response = {
        "messageVersion": "1.0",
        "response": action_response,
        "sessionAttributes": session_attributes,
        "promptSessionAttributes": prompt_session_attributes,
    }

    return api_response
